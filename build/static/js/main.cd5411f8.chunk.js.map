{"version":3,"sources":["external-api.ts","reducers/index.tsx","contexts/index.tsx","components/icon/index.tsx","components/search-form/styles.ts","data/placeholders.ts","components/search-form/index.tsx","components/song-list/styles.js","styles.ts","components/select-group/index.tsx","components/button/index.tsx","components/loading-spinner/index.tsx","components/song-list/index.tsx","components/song-view/index.tsx","App.tsx","index.tsx"],"names":["baseUrl","getSong","id","a","url","axios","get","result","data","searchSongs","lyrics","page","encodeURI","searchLyrics","path","console","log","then","res","searchYoutubeVideos","queryString","initialState","songs","currentSong","query","nextPage","isLoading","error","reducer","state","action","type","concat","find","x","SongsContext","createContext","Icon","icon","size","color","IconWithLoad","faSpinner","pulse","spin","Input","styled","input","Button","button","Container","form","Form","placeholderLyrics","SearchForm","searchTerm","setSearchTerm","useContext","songsState","dispatch","useState","setIsLoading","placeholderIndex","Math","floor","random","length","placeholder","handleSubmit","e","preventDefault","lyricsSearchRes","message","isDisabled","onSubmit","disabled","value","onChange","target","SongTile","div","SongItem","SongItemImg","img","SongImgWrapper","SongItemImgWrapper","SongTitle","SongArtist","sizes","Row","Col","props","xs","sm","md","lg","xl","SelectOptionBase","selected","SelectGroupOption","children","selectedValue","handleClick","title","onClick","LoadingSpinner","text","style","display","alignItems","justifyContent","margin","marginLeft","SongLyricHighlight","highlight","highlights","property","highlightsStr","ranges","slice","reverse","forEach","range","end","start","dangerouslySetInnerHTML","__html","song","imgUrl","setImgUrl","useEffect","song_art_image_thumbnail_url","header_image_thumbnail_url","onKeyDown","role","tabIndex","marginBottom","src","alt","artist","LoadMoreButton","marginTop","ViewSelector","setValue","closest","SongControls","view","setView","marginRight","SongList","history","useHistory","setCurrentSong","push","document","map","textAlign","SongInfo","to","maxHeight","maxWidth","width","border","borderRadius","highlightLyrics","newLyrics","termReplaceRegex","RegExp","matches","match","matchStrings","set","Set","replaceAll","Lyrics","setLyrics","lyricsRes","getLyrics","Video","isOpen","setIsOpen","videoUrl","setVideoUrl","videoRes","videoID","getVideoUrl","className","height","frameBorder","allow","allowFullScreen","SongView","useParams","Number","isNaN","existingSong","songRes","loadSong","Error","errorMessage","backgroundColor","padding","Header","SongSearch","App","useReducer","songState","library","add","faSearch","faLongArrowAltDown","faLongArrowAltUp","faList","faThLarge","faPlayCircle","faPlay","faMusic","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cd5411f8.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  YoutubeSearchResult, SongSearchResponse, LyricsRes, Song,\r\n} from './types';\r\n\r\n// const baseUrl = 'http://localhost:3001/api';\r\nconst baseUrl = '/api';\r\n\r\nexport const getSong = async (id:number) : Promise<Song> => {\r\n  const url = `${baseUrl}/songs/${id}`;\r\n  const result = await axios.get(url);\r\n  // await new Promise((resolve) => setTimeout(resolve, 5000));\r\n  return result.data;\r\n};\r\n\r\nexport const searchSongs = async (lyrics: string, page: number) : Promise<SongSearchResponse> => {\r\n  const url = `${baseUrl}/search?lyrics=${encodeURI(lyrics)}&page=${page}`;\r\n  const result = await axios.get(url);\r\n  // await new Promise((resolve) => setTimeout(resolve, 1000));\r\n  return result.data;\r\n};\r\n\r\nexport const searchLyrics = async (path: string) : Promise<LyricsRes> => {\r\n  const url = `${baseUrl}/lyrics?path=${path}`;\r\n  // await new Promise((resolve) => setTimeout(resolve, 3000));\r\n  console.log(url);\r\n  return axios.get(url).then((res) => res.data);\r\n};\r\n\r\nexport const searchYoutubeVideos = async (queryString:string) : Promise<YoutubeSearchResult[]> => {\r\n  const url = `${baseUrl}/videos?queryString=${encodeURI(queryString)}`;\r\n  // await new Promise((resolve) => setTimeout(resolve, 3000));\r\n  return axios.get(url).then((res) => res.data);\r\n};\r\n\r\nexport default {};\r\n","import { SongsAction, SongsState } from '../types';\r\n\r\nconst initialState : SongsState = {\r\n  songs: [],\r\n  currentSong: null,\r\n  query: '',\r\n  nextPage: 1,\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst reducer = (state:SongsState, action:SongsAction) : SongsState => {\r\n  switch (action.type) {\r\n    case 'SET_QUERY':\r\n      return { ...state, query: action.data };\r\n    case 'APPEND_SONGS':\r\n      return {\r\n        ...state,\r\n        songs: state.songs.concat(action.data.songs),\r\n        nextPage: action.data.nextPage,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case 'SET_SONGS':\r\n      return {\r\n        ...state,\r\n        songs: action.data.songs,\r\n        query: action.data.query,\r\n        nextPage: action.data.nextPage,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case 'SET_CURRENT_SONG':\r\n      return {\r\n        ...state,\r\n        currentSong: state.songs.find((x) => x.id === action.data) || null,\r\n      };\r\n    case 'SET_LOADING':\r\n      return { ...state, isLoading: true, error: null };\r\n    case 'SET_ERROR':\r\n      return { ...state, isLoading: false, error: action.data };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport {\r\n  reducer,\r\n  initialState,\r\n};\r\n","import React, { createContext } from 'react';\r\nimport { SongsState, SongsAction } from '../types';\r\nimport { initialState } from '../reducers';\r\n\r\ntype SongsContextValue = [\r\n    songsState:SongsState,\r\n    dispatch: React.Dispatch<SongsAction>,\r\n];\r\n\r\nconst initialDispatch = () => {};\r\n\r\nconst SongsContext = createContext<SongsContextValue>([initialState, initialDispatch]);\r\n\r\nexport default SongsContext;\r\n","/* eslint-disable react/require-default-props */\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { IconProp, SizeProp } from '@fortawesome/fontawesome-svg-core';\r\n\r\nexport const Icon = ({\r\n  icon,\r\n  size,\r\n  color = '',\r\n} : {\r\n  icon: IconProp,\r\n  size?: SizeProp,\r\n  color?: string\r\n}) => (<FontAwesomeIcon icon={icon} size={size} color={color} />);\r\n\r\nexport const IconWithLoad = ({\r\n  isLoading,\r\n  icon,\r\n  size,\r\n  color = '',\r\n} : {\r\n  isLoading : boolean,\r\n  icon : IconProp,\r\n  size? : SizeProp,\r\n  color? : string\r\n}) => {\r\n  if (isLoading) {\r\n    return (\r\n      <FontAwesomeIcon\r\n        icon={faSpinner}\r\n        pulse\r\n        spin\r\n      />\r\n    );\r\n  }\r\n  return (<Icon icon={icon} size={size} color={color} />);\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n    border: none;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    font-size: 1em;\r\n  \r\n    &:focus {\r\n      outline:none\r\n    }\r\n    &:focus-visible {\r\n      outline:none\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background: none;\r\n    border:none;\r\n\r\n    cursor: pointer;\r\n    color: blue;\r\n\r\n    &:disabled {\r\n      cursor: not-allowed;\r\n    }\r\n`;\r\n\r\nexport const Container = styled.form`\r\n  background-color: #fff;\r\n  color: #171212;\r\n  padding: .5rem;\r\n  border-radius:.5rem;\r\n  webkit-box-shadow: 0 15px 35px rgb(50 50 93 / 10%), 0 5px 15px rgb(0 0 0 / 7%);\r\n  box-shadow: 0 15px 35px rgb(50 50 93 / 10%), 0 5px 15px rgb(0 0 0 / 7%);\r\n\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const Form = styled(Container)`\r\n  display:flex;\r\n  border:solid #fff 1px;\r\n  padding-top:.5rem;\r\n  padding-bottom: .5rem;\r\n  border-radius: .5rem;\r\n  font-size:1.25em\r\n`;\r\n","const placeholderLyrics = [\r\n  'born in a crossfire hurricane',\r\n  'they call me Mister Fahrenheit',\r\n  'having trouble with the high school head',\r\n  'buying a stairway to heaven',\r\n  'taste of your own medicine',\r\n  'shot through the heart',\r\n];\r\n\r\nexport default placeholderLyrics;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable linebreak-style */\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { Song } from '../../types';\r\nimport { searchSongs } from '../../external-api';\r\nimport SongsContext from '../../contexts';\r\nimport { Icon, IconWithLoad } from '../icon';\r\nimport * as S from './styles';\r\nimport placeholderLyrics from '../../data/placeholders';\r\n\r\nconst SearchForm = ({ searchTerm, setSearchTerm } : {\r\n  searchTerm: string,\r\n  setSearchTerm: (st:string) => void,\r\n}) => {\r\n  const [songsState, dispatch] = useContext(SongsContext);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const placeholderIndex = Math.floor(Math.random() * placeholderLyrics.length);\r\n  const placeholder = placeholderLyrics[placeholderIndex];\r\n\r\n  const handleSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    if (!searchTerm) { return; }\r\n\r\n    dispatch({ type: 'SET_LOADING' });\r\n    setIsLoading(true);\r\n    const query = searchTerm;\r\n\r\n    try {\r\n      const lyricsSearchRes = await searchSongs(searchTerm, 1);\r\n      dispatch({\r\n        type: 'SET_SONGS',\r\n        data: {\r\n          songs: lyricsSearchRes.songs,\r\n          query,\r\n          nextPage: lyricsSearchRes.nextPage,\r\n        },\r\n      });\r\n      setIsLoading(false);\r\n    } catch (ex:any) {\r\n      dispatch({\r\n        type: 'SET_ERROR',\r\n        data: ex.message as string,\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  const isDisabled = !searchTerm || songsState.isLoading;\r\n  return (\r\n    <S.Form onSubmit={handleSubmit}>\r\n      <S.Button\r\n        disabled={isDisabled}\r\n        type=\"submit\"\r\n      >\r\n        <IconWithLoad icon=\"search\" isLoading={isLoading} color={isDisabled ? '#ccc' : '#888'} />\r\n\r\n      </S.Button>\r\n      <S.Input\r\n        type=\"text\"\r\n        value={searchTerm}\r\n        placeholder={placeholder}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n\r\n    </S.Form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const SongTile = styled.div`\r\n    border-radius: 0.25rem;\r\n    padding: 0.5rem;\r\n    /*margin-bottom: 0.25rem;*/\r\n    cursor: pointer;\r\n    background-color: #E5EAF5;\r\n    height: 100%;\r\n    &:hover {\r\n        -webkit-filter: brightness(105%);\r\n      }\r\n`;\r\n\r\nexport const SongItem = styled.div`\r\n    display:flex;\r\n    border-radius:0.25rem;\r\n    padding:0.5rem;\r\n    margin-bottom:0.25rem;\r\n    background-color: #E5EAF5;\r\n    cursor:pointer;\r\n\r\n    &:hover {\r\n      -webkit-filter: brightness(105%);\r\n    }\r\n`;\r\n\r\nexport const SongItemImg = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    border: solid gray 0px;\r\n`;\r\n\r\nexport const SongImgWrapper = styled.div`\r\n    max-height: 200px;\r\n    max-width: 200px;\r\n    border-radius:0.25rem;\r\n    border: solid #eee 1px;\r\n    overflow:hidden;\r\n    margin: auto\r\n`;\r\n\r\nexport const SongItemImgWrapper = styled.div`\r\n    max-height: 100px;\r\n    max-width: 100px;\r\n    border-radius:0.25rem;\r\n    border: solid #eee 1px;\r\n    overflow:hidden;\r\n    \r\n    margin:auto 0;\r\n    margin-right:0.5rem;\r\n`;\r\n\r\nexport const SongTitle = styled.div`\r\n    font-size:1.1em;\r\n    font-weight:500\r\n`;\r\nexport const SongArtist = styled.div`\r\n    color: #6c757d\r\n`;\r\n\r\nexport default {};\r\n","import styled from 'styled-components';\r\n\r\nconst sizes = {\r\n  xs: 0,\r\n  sm: '576px',\r\n  md: '768px',\r\n  lg: '992px',\r\n  xl: '1200px',\r\n  xxl: '1400px',\r\n};\r\n\r\nexport const Row = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  grid-column-gap: 1em;\r\n  grid-row-gap: 1em;\r\n`;\r\n\r\ninterface ColProps {\r\n  xs?:number,\r\n  sm?:number,\r\n  md?:number,\r\n  lg?:number,\r\n  xl?:number,\r\n}\r\n\r\nexport const Col = styled.div<ColProps>`\r\n  grid-column: span ${(props) => props.xs || '12'};\r\n\r\n  @media (min-width: ${sizes.sm}) {\r\n    ${(props) => (props.sm ? `grid-column: span ${props.sm}` : '')}\r\n  }\r\n\r\n  @media (min-width: ${sizes.md}) {\r\n    ${(props) => (props.md ? `grid-column: span ${props.md}` : '')}\r\n  }\r\n\r\n  @media (min-width: ${sizes.lg}) {\r\n    ${(props) => (props.lg ? `grid-column: span ${props.lg}` : '')}\r\n  }\r\n\r\n  @media (min-width: ${sizes.xl}) {\r\n    ${(props) => (props.xl ? `grid-column: span ${props.xl}` : '')}\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Icon } from '../icon';\r\n\r\ninterface SelectOptionBaseProps {\r\n  selected?: boolean\r\n}\r\n\r\nconst SelectOptionBase = styled.button<SelectOptionBaseProps>`\r\n  overflow: hidden;\r\n  border: none;\r\n  border-radius: 4px;\r\n  display: inline-block;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  padding: 0 12px;\r\n  vertical-align: middle;\r\n  -webkit-tap-highlight-color: transparent;\r\n  font-family: inherit;\r\n\r\n  background-color: ${(props) => (props.selected ? '#ddd' : '#fff')};\r\n  color: ${(props) => (props.selected ? 'inherit' : 'inherit')};\r\n\r\n  &:not([disabled]) {\r\n    cursor:pointer\r\n  }\r\n  &:hover {\r\n    ${(props) => (props.selected ? '' : '-webkit-filter: brightness(90%);')};\r\n  }`;\r\n\r\nconst SelectGroupOption = ({\r\n  children, value, selectedValue, handleClick,\r\n} : {\r\n  children: any,\r\n  value: any,\r\n  selectedValue:any,\r\n  handleClick: (e:any)=>void\r\n}) => (\r\n  <SelectOptionBase\r\n    title={value}\r\n    value={value}\r\n    selected={value === selectedValue}\r\n    onClick={handleClick}\r\n  >\r\n    {children}\r\n  </SelectOptionBase>\r\n);\r\n\r\nexport const SelectGroup = () => {\r\n  const [selectedValue, setSelectedValue] = useState('tiles');\r\n  const handleClick = (e:any) => {\r\n    setSelectedValue(e.target.closest('button').value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SelectGroupOption value=\"tiles\" selectedValue={selectedValue} handleClick={handleClick}>\r\n        <Icon icon=\"th-large\" />\r\n      </SelectGroupOption>\r\n      <SelectGroupOption value=\"list\" selectedValue={selectedValue} handleClick={handleClick}>\r\n        <Icon icon=\"list\" />\r\n      </SelectGroupOption>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectGroupOption;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  overflow: hidden;\r\n  border: none;\r\n  border-radius: 4px;\r\n  display: inline-block;\r\n  height: 36px;\r\n  line-height: 36px;\r\n  padding: 0 16px;\r\n  vertical-align: middle;\r\n  -webkit-tap-highlight-color: transparent;\r\n  font-family: inherit;\r\n  background-color: #E03A40;\r\n  color: white;\r\n  font-weight: 500;\r\n\r\n  &:not([disabled]) {\r\n    cursor:pointer\r\n  }\r\n  &:hover {\r\n    -webkit-filter: brightness(90%);\r\n  }`;\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { IconWithLoad } from '../icon';\r\n\r\nconst LoadingSpinner = ({ text } : { text:string }) => {\r\n  const style = {\r\n    display: 'flex', alignItems: 'center', justifyContent: 'center', margin: '0 auto',\r\n  };\r\n  return (\r\n    <div style={style}>\r\n      <IconWithLoad icon=\"spinner\" isLoading />\r\n      <div style={{ marginLeft: '.5rem' }}>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable linebreak-style */\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch, Route, Link, useHistory,\r\n} from 'react-router-dom';\r\nimport { searchSongs } from '../../external-api';\r\nimport { Song, SongWithLyricsHighlight, LyricsHighlight } from '../../types';\r\nimport * as S from './styles';\r\nimport * as Grid from '../../styles';\r\nimport SongsContext from '../../contexts';\r\nimport SelectGroupOption from '../select-group';\r\nimport { Icon } from '../icon';\r\nimport Button from '../button';\r\nimport LoadingSpinner from '../loading-spinner';\r\n\r\nconst SongLyricHighlight = ({ highlights } : { highlights: LyricsHighlight[] }) => {\r\n  const highlight = highlights.find((x) => x.property === 'lyrics');\r\n  if (!highlight) { return null; }\r\n\r\n  let highlightsStr = highlight.value;\r\n  highlight\r\n    .ranges\r\n    .slice()\r\n    .reverse()\r\n    .forEach((range) => {\r\n      highlightsStr = `${highlightsStr.slice(0, range.end)}</b>${highlightsStr.slice(range.end)}`;\r\n      highlightsStr = `${highlightsStr.slice(0, range.start)}<b>${highlightsStr.slice(range.start)}`;\r\n    });\r\n  highlightsStr = `<span style='color:#6c757d'>${highlightsStr}</span>`;\r\n\r\n  return (\r\n    // eslint-disable-next-line react/no-danger\r\n    <div dangerouslySetInnerHTML={{\r\n      __html: highlightsStr,\r\n    }}\r\n    />\r\n  );\r\n};\r\n\r\nconst SongTile = ({ song, handleClick } : {\r\n  song: SongWithLyricsHighlight,\r\n  handleClick: () =>void\r\n}) => {\r\n  const [imgUrl, setImgUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (song.song_art_image_thumbnail_url) {\r\n      setImgUrl(song.song_art_image_thumbnail_url);\r\n    } else if (song.header_image_thumbnail_url) {\r\n      setImgUrl(song.header_image_thumbnail_url);\r\n    }\r\n  }, []);\r\n\r\n  const style = {\r\n    marginBottom: '1rem',\r\n  };\r\n\r\n  return (\r\n    <Grid.Col\r\n      xs={12}\r\n      sm={6}\r\n      lg={3}\r\n      onClick={handleClick}\r\n      onKeyDown={handleClick}\r\n      role=\"menuitem\"\r\n      tabIndex={0}\r\n      style={style}\r\n    >\r\n      <S.SongTile>\r\n        <S.SongImgWrapper>\r\n          {imgUrl\r\n            ? <S.SongItemImg src={imgUrl} alt=\"Album art\" />\r\n            : <div>Loading...</div>}\r\n        </S.SongImgWrapper>\r\n        <div>\r\n          <S.SongTitle>{song.title}</S.SongTitle>\r\n          <S.SongArtist>{song.artist}</S.SongArtist>\r\n          <br />\r\n          {song.highlights && <SongLyricHighlight highlights={song.highlights} />}\r\n        </div>\r\n      </S.SongTile>\r\n\r\n    </Grid.Col>\r\n  );\r\n};\r\n\r\nconst SongItem = ({ song, handleClick } : {\r\n  song: SongWithLyricsHighlight,\r\n  handleClick: () =>void\r\n}) => {\r\n  const [imgUrl, setImgUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (song.song_art_image_thumbnail_url) {\r\n      setImgUrl(song.song_art_image_thumbnail_url);\r\n    } else if (song.header_image_thumbnail_url) {\r\n      setImgUrl(song.header_image_thumbnail_url);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <S.SongItem\r\n      onClick={handleClick}\r\n      onKeyDown={handleClick}\r\n      role=\"menuitem\"\r\n      tabIndex={0}\r\n      style={{ marginBottom: '.5rem' }}\r\n    >\r\n      <S.SongItemImgWrapper>\r\n        {imgUrl\r\n          ? <S.SongItemImg src={imgUrl} alt=\"Album art\" />\r\n          : <div>Loading...</div>}\r\n      </S.SongItemImgWrapper>\r\n      <div>\r\n        <S.SongTitle>{song.title}</S.SongTitle>\r\n        <S.SongArtist>{song.artist}</S.SongArtist>\r\n        <br />\r\n        {song.highlights && <SongLyricHighlight highlights={song.highlights} />}\r\n      </div>\r\n    </S.SongItem>\r\n  );\r\n};\r\n\r\nconst LoadMoreButton = () => {\r\n  const [songsState, dispatch] = useContext(SongsContext);\r\n  if (!songsState.query || !songsState.nextPage || songsState.isLoading) {\r\n    return null;\r\n  }\r\n\r\n  const handleClick = async (e: React.SyntheticEvent) => {\r\n    dispatch({ type: 'SET_LOADING' });\r\n\r\n    try {\r\n      const lyricsSearchRes = await searchSongs(songsState.query, songsState.nextPage || 1);\r\n      dispatch({\r\n        type: 'APPEND_SONGS',\r\n        data: {\r\n          songs: lyricsSearchRes.songs,\r\n          nextPage: lyricsSearchRes.nextPage,\r\n        },\r\n      });\r\n    } catch (ex:any) {\r\n      dispatch({\r\n        type: 'SET_ERROR',\r\n        data: ex.message as string,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      type=\"button\"\r\n      disabled={songsState.isLoading}\r\n      onClick={handleClick}\r\n      style={{ margin: '0 auto', marginTop: '.5em' }}\r\n    >\r\n      Load More Results\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst ViewSelector = ({ value, setValue } : {\r\n  value: any,\r\n  setValue: (val:any) => void\r\n}) => {\r\n  const handleClick = (e:any) => {\r\n    setValue(e.target.closest('button').value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SelectGroupOption value=\"tiles\" selectedValue={value} handleClick={handleClick}>\r\n        <Icon icon=\"th-large\" />\r\n      </SelectGroupOption>\r\n      <SelectGroupOption value=\"list\" selectedValue={value} handleClick={handleClick}>\r\n        <Icon icon=\"list\" />\r\n      </SelectGroupOption>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SongControls = ({\r\n  query, songs, view, setView,\r\n} : {\r\n  query:string,\r\n  songs:Song[],\r\n  view: string,\r\n  setView: (s:string)=>void\r\n}) => (\r\n  <div style={{ display: 'flex', margin: '.25rem 0' }}>\r\n    <div style={{ marginRight: 'auto', color: '#6c757d' }}>\r\n      Showing\r\n      {' '}\r\n      {songs.length}\r\n      {' '}\r\n      results for\r\n      {' '}\r\n      {`\"${query}\"`}\r\n    </div>\r\n    <ViewSelector value={view} setValue={setView} />\r\n  </div>\r\n);\r\n\r\nconst SongList = () => {\r\n  const [songsState, dispatch] = useContext(SongsContext);\r\n  const [view, setView] = useState<string>('tiles');\r\n  const history = useHistory();\r\n\r\n  const { songs, query, isLoading } = songsState;\r\n  const setCurrentSong = (song:SongWithLyricsHighlight) => {\r\n    dispatch({\r\n      type: 'SET_CURRENT_SONG',\r\n      data: song.id,\r\n    });\r\n    history.push(`/songs/${song.id}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = 'Search Songs by Lyrics';\r\n  }, []);\r\n\r\n  if (songs.length === 0 && query && !isLoading) { return (<div>No songs found</div>); }\r\n\r\n  return (\r\n    <div>\r\n      {query && <SongControls query={query} songs={songs} view={view} setView={setView} /> }\r\n      <div>\r\n        {view === 'list' && songs.map((song) => (\r\n          <SongItem\r\n            key={song.id}\r\n            song={song}\r\n            handleClick={() => setCurrentSong(song)}\r\n          />\r\n        ))}\r\n        {view === 'tiles'\r\n        && (\r\n        <Grid.Row>\r\n          { songs.map((song) => (\r\n            <SongTile\r\n              key={song.id}\r\n              song={song}\r\n              handleClick={() => setCurrentSong(song)}\r\n            />\r\n          ))}\r\n        </Grid.Row>\r\n        )}\r\n        {isLoading && <LoadingSpinner text=\"Loading songs...\" />}\r\n      </div>\r\n      <div style={{ textAlign: 'center' }}>\r\n        <LoadMoreButton />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongList;\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable arrow-body-style */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable linebreak-style */\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { Link, useParams, useHistory } from 'react-router-dom';\r\nimport { Song, SongWithLyricsHighlight } from '../../types';\r\nimport { getSong, searchLyrics, searchYoutubeVideos } from '../../external-api';\r\nimport './styles.css';\r\nimport LoadingSpinner from '../loading-spinner';\r\nimport Button from '../button';\r\nimport SongsContext from '../../contexts';\r\nimport { Icon } from '../icon';\r\n\r\nconst SongInfo = ({ song } : { song:Song }) => {\r\n  const imgStyle = {\r\n    maxHeight: '300px',\r\n    maxWidth: '300px',\r\n    width: '100%',\r\n    marginTop: '0.5rem',\r\n    marginBottom: '0.5rem',\r\n    border: 'solid gray 0px',\r\n    borderRadius: '0.25rem',\r\n  };\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">Back to Search</Link>\r\n      <br />\r\n\r\n      <h2 style={{ marginBottom: '0' }}>{song.title}</h2>\r\n      <h4 style={{ margin: '0' }}>\r\n        by\r\n        {' '}\r\n        {song.artist}\r\n      </h4>\r\n\r\n      <div>\r\n        <img\r\n          style={imgStyle}\r\n          alt=\"Song cover art\"\r\n          src={song.song_art_image_thumbnail_url || song.header_image_thumbnail_url}\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nconst highlightLyrics = (lyrics:string, searchTerm:string) : string => {\r\n  if (!lyrics || !searchTerm) { return lyrics; }\r\n  let newLyrics = lyrics;\r\n  const termReplaceRegex = new RegExp(searchTerm, 'ig');\r\n  const matches = lyrics.match(termReplaceRegex);\r\n  if (matches && matches.length !== 0) {\r\n    const matchStrings = matches.map((x) => x);\r\n    const set = new Set(matchStrings) as any;\r\n    const distinctMatches = [...set] as string[];\r\n    distinctMatches.forEach((match) => {\r\n      newLyrics = newLyrics.replaceAll(match, `<span style=\"background-color: #FFFF00\">${match}</span>`);\r\n    });\r\n  }\r\n\r\n  return newLyrics;\r\n};\r\n\r\nconst Lyrics = ({ path, searchTerm } : {\r\n  path: string,\r\n  searchTerm: string\r\n}) => {\r\n  if (!path) return null;\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [lyrics, setLyrics] = useState<string>('');\r\n  useEffect(() => {\r\n    async function getLyrics() {\r\n      setIsLoading(true);\r\n      try {\r\n        const lyricsRes = await searchLyrics(path);\r\n        setIsLoading(false);\r\n        setLyrics(highlightLyrics(lyricsRes.lyrics, searchTerm));\r\n      } catch (e) {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    getLyrics();\r\n  }, [path]);\r\n\r\n  if (isLoading) { return <LoadingSpinner text=\"Loading lyrics...\" />; }\r\n  if (!lyrics) { return (<div>No lyrics found</div>); }\r\n  return (\r\n    <div\r\n      style={{ textAlign: 'left', margin: 'auto', maxWidth: '500px' }}\r\n      // eslint-disable-next-line react/no-danger\r\n      dangerouslySetInnerHTML={{\r\n        __html: lyrics,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst Video = ({ song } : { song: SongWithLyricsHighlight }) => {\r\n  if (!song) {\r\n    return null;\r\n  }\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n  const [videoUrl, setVideoUrl] = useState<string>('');\r\n  const [songsState, dispatch] = useContext(SongsContext);\r\n\r\n  useEffect(() => {\r\n    setIsOpen(false);\r\n    setIsLoading(true);\r\n    async function getVideoUrl() {\r\n      try {\r\n        const videoRes = await searchYoutubeVideos(`${song.title} ${song.artist}`);\r\n        setIsLoading(false);\r\n        if (videoRes.length > 0) {\r\n          setVideoUrl(videoRes[0].videoID);\r\n        }\r\n      } catch (e) {\r\n        setIsLoading(false);\r\n        dispatch({\r\n          type: 'SET_ERROR',\r\n          data: 'Sorry, could not find song on Youtube',\r\n        });\r\n      }\r\n    }\r\n    getVideoUrl();\r\n  }, [song]);\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner text=\"Loading Youtube link\" />;\r\n  }\r\n\r\n  if (isOpen) {\r\n    return (\r\n      <div>\r\n        <div className=\"video-container\">\r\n          <iframe\r\n            width=\"500\"\r\n            height=\"300\"\r\n            src={`https://www.youtube-nocookie.com/embed/${videoUrl}?autoplay=1`}\r\n            title=\"Embedded YT video\"\r\n            frameBorder=\"0\"\r\n            allow=\"autoplay; encrypted-media\"\r\n            allowFullScreen\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (videoUrl) {\r\n    return (\r\n      <div>\r\n        <Button type=\"button\" onClick={() => setIsOpen(true)}>\r\n          <Icon icon=\"play\" />\r\n          {' '}\r\n          Play Youtube Video\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst SongView = ({ searchTerm } : {\r\n  searchTerm: string\r\n}) => {\r\n  const history = useHistory();\r\n  const [songsState, dispatch] = useContext(SongsContext);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [currentSong, setCurrentSong] = useState<Song | null>(null);\r\n\r\n  const { id } : any = useParams();\r\n  if (!id || Number.isNaN(Number(id))) {\r\n    history.push('/');\r\n    return null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = 'Loading song...';\r\n    const existingSong = songsState.songs.find((x) => x.id === Number(id));\r\n    if (existingSong) {\r\n      setCurrentSong(existingSong);\r\n      document.title = `${existingSong.title} - ${existingSong.artist}`;\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    async function loadSong() {\r\n      try {\r\n        const songRes = await getSong(id);\r\n        setIsLoading(false);\r\n        if (songRes) {\r\n          setCurrentSong(songRes);\r\n          document.title = `${songRes.title} - ${songRes.artist}`;\r\n        }\r\n      } catch (e) {\r\n        history.push('/');\r\n      }\r\n    }\r\n\r\n    loadSong();\r\n  }, [id]);\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner text=\"Attempting to load song\" />;\r\n  }\r\n  if (!currentSong) {\r\n    // history.push('/');\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <SongInfo song={currentSong} />\r\n      <Video song={currentSong} />\r\n      {currentSong.path && <Lyrics path={currentSong.path} searchTerm={searchTerm} />}\r\n      <div style={{ marginTop: '1rem' }}>\r\n        <Link to=\"/\">Back to Search</Link>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongView;\r\n","/* eslint-disable linebreak-style */\nimport React, { useState, useReducer } from 'react';\nimport {\n  BrowserRouter as Router, Switch, Route,\n} from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faSearch, faLongArrowAltDown, faLongArrowAltUp, faList, faThLarge, faPlayCircle, faPlay, faMusic,\n} from '@fortawesome/free-solid-svg-icons';\nimport { SearchForm, SongList, SongView } from './components';\nimport SongsContext from './contexts';\nimport { reducer, initialState } from './reducers';\n\nconst Error = ({ errorMessage } : { errorMessage:string }) => {\n  if (!errorMessage) return null;\n  const errorStyle = {\n    display: 'block',\n    backgroundColor: '#F56565',\n    color: 'white',\n    padding: '0.5rem',\n    borderRadius: '.25rem',\n  };\n  return (\n    <div style={errorStyle}>\n      {errorMessage}\n    </div>\n  );\n};\n\nconst Header = () => (\n  <div>\n    <h2 style={{ marginBottom: '0' }}>Search Songs by Lyrics</h2>\n    <div style={{ color: '#6c757d' }}>Powered by Genius API</div>\n  </div>\n);\n\nconst SongSearch = ({ searchTerm, setSearchTerm } : {\n  searchTerm:string,\n  setSearchTerm:React.Dispatch<any>\n}) => (\n  <div>\n    <Header />\n    <SearchForm\n      searchTerm={searchTerm}\n      setSearchTerm={setSearchTerm}\n    />\n    <SongList />\n  </div>\n);\n\nconst App = () => {\n  const [songState, dispatch] = useReducer(reducer, initialState);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  library.add(faSearch);\n  library.add(faLongArrowAltDown);\n  library.add(faLongArrowAltUp);\n  library.add(faList);\n  library.add(faThLarge);\n  library.add(faPlayCircle);\n  library.add(faPlay);\n  library.add(faMusic);\n\n  const style = {\n    maxWidth: '900px',\n    margin: 'auto',\n    marginBottom: '1rem',\n  };\n\n  return (\n    <SongsContext.Provider value={[songState, dispatch]}>\n      <div className=\"App\" style={style}>\n        {songState.error && <Error errorMessage={songState.error} />}\n\n        <Router>\n          <Switch>\n            <Route path=\"/songs/:id\">\n              <SongView searchTerm={searchTerm} />\n              {/* {songState.currentSong\n                ? <SongView song={songState.currentSong} searchTerm={searchTerm} />\n                : <SongSearch searchTerm={searchTerm} setSearchTerm={setSearchTerm} /> } */}\n            </Route>\n            <Route path=\"/\">\n              <SongSearch searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n            </Route>\n          </Switch>\n        </Router>\n\n      </div>\n    </SongsContext.Provider>\n  );\n};\n\nexport default App;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}